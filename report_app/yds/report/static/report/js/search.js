/* Απαραίτητες JavaScript λειτουργία ώστε να καθιστάτε εφικτή η "ζωντανή" αναζήτηση των έργων του δήμου με βάση
γράμματα ή λέξεις κλειδιά. */

$(document).ready(function()
{

    /**
     * Αυτόματη μετατροπή σε κεφαλαίους χαρακτήρες.
     *
     * Ώστε να αποφευχθεί το εξής πρόβλημα :
     *
     * > Αν ο χρήστης πληκτρολογούσε "ΚαΤ" τότε στην αναζήτηση θα μετατρεπόταν σε "κΑτ" και αυτό θα δημιουργούσε
     *  πρόβλημα.
     *
     * Οπότε ότι χαρακτήρες/γράμματα πληκτρολογεί ο χρήστης, τα μετατρέπουμε αναγκαστικά σε κεφαλαία.
     */
    function inputToUpperCase( )
    {
        $('#keywords_field').val( function ()
        {
            return this.value.toUpperCase();
        } );
    }




    /**
     * Έλεγχοι ξεχωριστών περιπτώσεων στο πλαίσιο αναζήτησης.
     *
     * Εδώ πραγματοποιούνται μερικοί έξτρα ελέγχει πάνω στο πλαίσιο εισαγωγή λέξεων-γραμμάτων κλειδιών αναζήτησης.
     * π.χ. :
     *  - Αν είναι άδειο, τότε εμφανίζονται όλα τα έργα.
     *  - Αν *δεν* είναι άδειο, τότε θα πρέπει να εμφανίζονται πόσα έχουν βρεθεί με βάσει τις λέξεις-γράμματα κλειδιά.
     */
    function checkInput()
    {

        if ( ! $('#keywords_field').val() ) // Αν είναι άδειο.
        {
            var projects_list = $('.public-projects').find('.project');

            projects_list.each(function ()
            {
                $(this).show(); // Εμφάνιση όλων των έργων δωρεάς του νομού.
            });

            $('#founded').hide(); // Δεν χρειάζεται να φαίνεται καν το "Βρέθηκαν ..".
        }
        else
        {
            $('#founded').show(); // Αλλιώς πρέπει να εμφανίζει πόσα βρέθηκαν.
        }

    }




    /**
     * Αναζήτηση των έργων με βάση τα γράμματα/λέξεις κλειδιών που εισήχθησαν στο πλαίσιο αναζήτησης.
     *
     * Αναζητάει σε όλους τους τίτλους των έργων του νομού, με βάσει τα γράμματα ή τις λέξεις κλειδιά που έχει
     * πληκτρολογήσει ο χρήστης στο πλαίσιο αναζήτησης, αν υπάρχουν.
     * Όσα έργα έχουν τα γράμματα ή τις λέξεις που έχει πληκτρολογήσει ο χρήστης, εμφανίζονται παρακάτω αλλιώς
     * αποκρύπτονται.
     *
     * Η αναζήτηση γίνεται και με κεφαλαίους και με πεζούς χαρακτήρες ( διότι οι τίτλοι γράφονται και με πεζούς και με
     * κεφαλαίους χαρακτήρες ), ώστε να μην χαθεί κάτι.
     *
     * TODO: Το πρόβλημα προκύπτει στους τόνους. Αν δηλαδή πληκτρολογήσει «ΚΑΤΑΣΚΕΥΉ» ή «ΚΑΤΑΣΚΕΥΗ» υπάρχει διαφορά.
     */
    function filteringProjects()
    {
        var current_input = $('#keywords_field').val();
        var projects_list = $('.public-projects').find('.project');
        var count = 0;

        projects_list.each( function (i, div)
        {
            var lowerCase = div.innerText.toLowerCase();
            var upperCase = div.innerText.toUpperCase();

            if ( ( lowerCase.indexOf(current_input) !== -1 ) || ( upperCase.indexOf(current_input) !== -1 ) )
            { // Αν ταυτιστεί, τότε εμφάνισε το και προσμέτρησε το.
                count += 1;
                $('#founded').text("Βρέθηκαν : " + count);
                $(div).show();
            }

            else
            { // Αν δεν ταιριάζει, τότε απόκρυψε το.
                $(div).hide();
            }

        }
        );


        if ( count === 0 )
        { // Αν φτάσει σε κάποιο σημείο που πλέον δεν ταιριάζει η *λέξη* σε κανένα τίτλο τότε: "Βρέθηκαν 0".
            $('#founded').text("Βρέθηκαν : " + count);
        }

    }




    /**
     * Συνάρτηση που καλείται κάθε φορά που πληκτρολογείτε κάτι στο πλαίσιο αναζήτησης.
     *
     * Σύνδεση με το πλαίσιο αναζήτησης, ώστε με το που πληκτρολογηθεί οτιδήποτε να εκτελεστούν μια σειρά από
     * απαραίτητες ενέργειες.
     */
    $('#keywords_field').keyup(function ()
    {
        inputToUpperCase();
        filteringProjects();
        checkInput();
    });



});





